---
source: crates/rolldown_testing/src/integration_test.rs
---
# Assets

## entry.js

```js

//#region keep/declare-class.ts
var declare_class_default = foo;
let dc = 123;

//#endregion
//#region keep/declare-let.ts
var declare_let_default = foo;
let dl = 123;

//#endregion
//#region keep/interface-merged.ts
var foo$2 = class foo$2 {
	static x = new foo$2();
};
var interface_merged_default = foo$2;
let im = 123;

//#endregion
//#region keep/interface-nested.ts
var interface_nested_default = foo;
let _in = 123;

//#endregion
//#region keep/type-nested.ts
var type_nested_default = foo;
let tn = 123;

//#endregion
//#region keep/value-namespace.ts
let foo$1;
(function(_foo) {
	let num = _foo.num = 0;
})(foo$1 || (foo$1 = {}));
var value_namespace_default = foo$1;
let vn = 123;

//#endregion
//#region keep/value-namespace-merged.ts
(function(_foo2) {
	let num = _foo2.num = 0;
})(foo || (foo = {}));
var value_namespace_merged_default = foo;
let vnm = 123;

//#endregion
//#region remove/interface.ts
var interface_default = foo;
let i = 123;

//#endregion
//#region remove/interface-exported.ts
var interface_exported_default = foo;
let ie = 123;

//#endregion
//#region remove/type.ts
var type_default = foo;
let t = 123;

//#endregion
//#region remove/type-exported.ts
var type_exported_default = foo;
let te = 123;

//#endregion
//#region remove/type-only-namespace.ts
var type_only_namespace_default = foo;
let ton = 123;

//#endregion
//#region remove/type-only-namespace-exported.ts
var type_only_namespace_exported_default = foo;
let tone = 123;

//#endregion
//#region entry.ts
var entry_default = [
	declare_class_default,
	dc,
	declare_let_default,
	dl,
	interface_merged_default,
	im,
	interface_nested_default,
	_in,
	type_nested_default,
	tn,
	value_namespace_default,
	vn,
	value_namespace_merged_default,
	vnm,
	i,
	ie,
	t,
	te,
	ton,
	tone
];

//#endregion
export { entry_default as default };
```
